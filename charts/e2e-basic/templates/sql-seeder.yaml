---

apiVersion: batch/v1
kind: Job
metadata:
  name: database-seeder
  namespace: {{ .Release.Namespace }}
  annotations:
    meta.helm.sh/release-name: postgres-seeder
    {{- include "e2e-testing.annotations" . | nindent 4 }}
  labels:
    app: postgres-seeder
    app.kubernetes.io/instance: postgres-seeder
    app.kubernetes.io/name: postgres-seeder
    {{- include "e2e-testing.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        app: database-seeder
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100 # between 1-100 the higher the score the more likely it is to get priority on the selected node
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app #Looking for the key "app" in the labels
                      operator: In
                      values:
                        - database-backend
                topologyKey: topology.kubernetes.io/zone # Optional - requires nodes to have this label - which they do for EKS.
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      containers:
        - name: seeder
          image: alpine:3.15.4
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh" ]
          startupProbe:
            initialDelaySeconds: 20
            failureThreshold: 5
            periodSeconds: 10
            tcpSocket:
              port: 5432
              host: database-e2e.{{ .Release.Namespace }}
          readinessProbe:
            initialDelaySeconds: 20
            failureThreshold: 5
            periodSeconds: 10
            tcpSocket:
              port: 5432
              host: database-e2e.{{ .Release.Namespace }}
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: passwd
                  name: pg-password
            - name: PGUSER
{{- if .Values.postgres.statefulset.env.postgresUser }}
              value: {{ .Values.postgres.statefulset.env.postgresUser }}
{{- else }}
              value: "root"
{{- end }}
          args:
            - -c
            - |
              apk update;
              apk add postgresql14-client;
              sleep 20;
              psql -hdatabase-e2e.{{ .Release.Namespace }} -c "CREATE DATABASE test";
              psql -hdatabase-e2e.{{ .Release.Namespace }} -d test -c "CREATE TABLE web (id SERIAL PRIMARY KEY, value VARCHAR(10) NOT NULL )";
              psql -hdatabase-e2e.{{ .Release.Namespace }} -d test -c "INSERT INTO web (value) VALUES('ok')";