---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: operator-webhook
  namespace: {{ .Values.operator.operatorNamespace.name }}
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/component: operator-webhook
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/name: knative-operator
spec:
  selector:
    matchLabels:
      app: operator-webhook
      role: operator-webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "false"
      labels:
        app: operator-webhook
        role: operator-webhook
        operator.knative.dev/release: "v1.4.1"
        app.kubernetes.io/component: operator-webhook
        app.kubernetes.io/version: "1.4.1"
        app.kubernetes.io/name: knative-operator
    spec:
      # To avoid node becoming SPOF, spread our replicas to different nodes.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccountName: operator-webhook
      containers:
        - name: operator-webhook
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: gcr.io/knative-releases/knative.dev/operator/cmd/webhook@sha256:91a7017364117f070354932ddcb46c65e0ed45b1056c8085079768257f5f1d8b
          resources:
          {{- toYaml .Values.operator.webhook.resources | nindent 12 }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: WEBHOOK_NAME
              value: operator-webhook
            - name: WEBHOOK_PORT
              value: "8443"
            - name: METRICS_DOMAIN
              value: knative.dev/operator
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
          readinessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
          livenessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
            failureThreshold: 6
            initialDelaySeconds: 20
      # Our webhook should gracefully terminate by lame ducking first, set this to a sufficiently
      # high value that we respect whatever value it has configured for the lame duck grace period.
      terminationGracePeriodSeconds: 300

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: knative-operator
  namespace: {{ .Values.operator.operatorNamespace.name }}
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/name: knative-operator
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: knative-operator
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        name: knative-operator
        app.kubernetes.io/name: knative-operator
        app.kubernetes.io/version: "1.4.1"
        app.kubernetes.io/part-of: knative-operator
    spec:
      serviceAccountName: knative-operator
      containers:
        - name: knative-operator
          image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: METRICS_DOMAIN
              value: knative.dev/operator
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
          resources:
          {{- toYaml .Values.operator.knative.resources | nindent 12 }}
          ports:
            - name: metrics
              containerPort: 9090
