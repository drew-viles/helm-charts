apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-serving-operator-aggregated
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative serving
    # automatically.
    - matchExpressions:
        - {key: serving.knative.dev/release, operator: Exists}
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-serving-operator-aggregated-stable
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative serving
    # automatically.
    - matchExpressions:
        - {key: app.kubernetes.io/name, operator: In, values: ["knative-serving"]}
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-operator
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
rules:
  - apiGroups:
      - operator.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
  # Bootstrapping permissions.
  # Roles that are explicitly bound buch which are specified by this Operator
  # MUST be specified here with 'get' and 'bind'.
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
    resourceNames:
      - system:auth-delegator
    verbs:
      - bind
      - get
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    resourceNames:
      - extension-apiserver-authentication-reader
    verbs:
      - bind
      - get
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
    verbs:
      - create
      - delete
      # Escalate is necessary in order to create a role using cluster role aggregation,
      # and to allow the Operator to bootstrap itself into the necessary set of
      # permissions, even as those continue to evolve upstream.
      - escalate
      - get
      - list
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - rolebindings
    verbs:
      - create
      - delete
      - list
      - get
      - update
  # Permissions required for Knative controller
  # infra.
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - caching.internal.knative.dev
    resources:
      - images
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - update
      - watch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - security.istio.io
      - apps
      - policy
    resources:
      - poddisruptionbudgets
      - peerauthentications
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - watch
      - update
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
  # Old resources that need cleaning up that are not in the knative-serving
  # namespace.
  - apiGroups:
      - ""
    resources:
      - services
      - deployments
      - horizontalpodautoscalers
    resourceNames:
      - knative-ingressgateway
    verbs:
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - config-controller
    verbs:
      - delete
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    resourceNames:
      - knative-serving-operator
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-operator-aggregated
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative eventing
    # automatically.
    - matchExpressions:
        - {key: eventing.knative.dev/release, operator: Exists}
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-operator-aggregated-stable
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative eventing
    # automatically.
    - matchExpressions:
        - {key: app.kubernetes.io/name, operator: In, values: ["knative-eventing"]}
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-eventing-operator
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
rules:
  - apiGroups:
      - operator.knative.dev
    resources:
      - '*'
    verbs:
      - '*'
  # Bootstrapping permissions.
  # Roles that are explicitly bound buch which are specified by this Operator
  # MUST be specified here with 'get' and 'bind'.
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
    verbs:
      - create
      - delete
      # Escalate is necessary in order to create a role using cluster role aggregation,
      # and to allow the Operator to bootstrap itself into the necessary set of
      # permissions, even as those continue to evolve upstream.
      - escalate
      - get
      - list
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - rolebindings
    verbs:
      - create
      - delete
      - list
      - get
      - update
  # Permissions required for Knative controller
  # infra.
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - caching.internal.knative.dev
    resources:
      - images
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - update
      - watch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - update
      - get
      - list
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - update
      - get
      - list
      - watch
      # Old resources that need cleaning up that are not in the knative-eventing
      # namespace.
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    resourceNames:
      - knative-eventing-operator
    verbs:
      - delete

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.operator.name }}
  namespace: {{ .Values.operator.operatorNamespace.name }}
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator

---

# TODO: Consider restriction of non-aggregated role to knativeservings namespaces.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-serving-operator
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-serving-operator
subjects:
  - kind: ServiceAccount
    name: knative-operator
    namespace: {{ .Values.operator.operatorNamespace.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-serving-operator-aggregated
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-serving-operator-aggregated
subjects:
  - kind: ServiceAccount
    name: knative-operator
    namespace: {{ .Values.operator.operatorNamespace.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-serving-operator-aggregated-stable
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-serving-operator-aggregated-stable
subjects:
  - kind: ServiceAccount
    name: knative-operator
    namespace: {{ .Values.operator.operatorNamespace.name }}
---
# TODO: Consider restriction of non-aggregated role to knativeeventing namespaces.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-eventing-operator
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-operator
subjects:
  - kind: ServiceAccount
    name: knative-operator
    namespace: {{ .Values.operator.operatorNamespace.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-eventing-operator-aggregated
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-operator-aggregated
subjects:
  - kind: ServiceAccount
    name: knative-operator
    namespace: {{ .Values.operator.operatorNamespace.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-eventing-operator-aggregated-stable
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-eventing-operator-aggregated-stable
subjects:
  - kind: ServiceAccount
    name: knative-operator
    namespace: {{ .Values.operator.operatorNamespace.name }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.operator.operatorNamespace.name }}
  name: knative-operator-webhook
  labels:
    eventing.knative.dev/release: devel
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
rules:
  # For manipulating certs into secrets.
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "create"
      - "update"
      - "list"
      - "watch"
      - "patch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-operator-webhook
  labels:
    eventing.knative.dev/release: devel
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
rules:
  # For watching logging configuration and getting certs.
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "get"
      - "list"
      - "watch"
  # For manipulating certs into secrets.
  - apiGroups:
      - ""
    resources:
      - "namespaces"
    verbs:
      - "get"
      - "create"
      - "update"
      - "list"
      - "watch"
      - "patch"
  # finalizers are needed for the owner reference of the webhook
  - apiGroups:
      - ""
    resources:
      - "namespaces/finalizers"
    verbs:
      - "update"
  # For getting our Deployment so we can decorate with ownerref.
  - apiGroups:
      - "apps"
    resources:
      - "deployments"
    verbs:
      - "get"
  - apiGroups:
      - "apps"
    resources:
      - "deployments/finalizers"
    verbs:
      - update
  # For actually registering our webhook.
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - "mutatingwebhookconfigurations"
      - "validatingwebhookconfigurations"
    verbs: &everything
      - "get"
      - "list"
      - "create"
      - "update"
      - "delete"
      - "patch"
      - "watch"
  # For leader election
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - "leases"
    verbs: *everything
  # Necessary for conversion webhook. These are copied from the serving
  # TODO: Do we really need all these permissions?
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator-webhook
  namespace: {{ .Values.operator.operatorNamespace.name }}
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ .Values.operator.operatorNamespace.name }}
  name: operator-webhook
  labels:
    eventing.knative.dev/release: devel
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
subjects:
  - kind: ServiceAccount
    name: operator-webhook
    namespace: {{ .Values.operator.operatorNamespace.name }}
roleRef:
  kind: Role
  name: knative-operator-webhook
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator-webhook
  labels:
    operator.knative.dev/release: "v1.4.1"
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/part-of: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-operator-webhook
subjects:
  - kind: ServiceAccount
    name: operator-webhook
    namespace: {{ .Values.operator.operatorNamespace.name }}
